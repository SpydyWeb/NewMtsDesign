import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useLocation, useNavigate } from "react-router-dom";
import { Col, Container, Row } from "react-bootstrap";
import { SerialNumber, SuccessIcon } from "../OrderStyledComponents";
import { CancelButton, SaveButton } from "../orderProperty/OrderPropertyStyledComponents";
const Confirmation = () => {
    const { state } = useLocation();
    const history = useNavigate();
    return (_jsx("div", { children: _jsxs(Container, { children: [_jsxs("div", { className: "text-center mt-5", children: [_jsx(SuccessIcon, { className: "mx-auto" }), _jsx("h2", { children: "Order saved successfully!" })] }), _jsxs(Row, { className: "mt-3 px-5 py-3", children: [_jsx("h4", { children: "Client Information" }), _jsxs(Row, { className: "mt-2", children: [_jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Client id:" }), "\u00A0", state.Client.Id] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Loan id:" }), "\u00A0", state.Client.LoanId] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Client reference number:" }), "\u00A0", state.Client.ClientReferenceNumber] }), _jsxs(Col, { xs: 12, children: [_jsx("b", { children: "Instructions:" }), "\u00A0", state.Client.Instructions ? state.Client.Instructions : "------"] })] })] }), _jsxs(Row, { className: "px-5 py-3", children: [_jsx("h4", { children: "Contacts" }), state.Contacts.map((contact, idx) => (_jsxs(Row, { className: "mt-2 position-relative", children: [_jsxs(SerialNumber, { children: [idx + 1, "."] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "First name:" }), "\u00A0", contact.FirstName] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Middle name:" }), "\u00A0", contact.MiddleName ? contact.MiddleName : "------"] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Last name:" }), "\u00A0", contact.LastName] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Email:" }), "\u00A0", contact.Email] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Phone:" }), "\u00A0", contact.Phone] })] })))] }), _jsxs(Row, { className: "px-5 py-3", children: [_jsx("h4", { children: "Property Address" }), _jsxs(Row, { className: "mt-2", children: [_jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Street Address:" }), "\u00A0", state.PropertyAddress.StreetAddress] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Suite/Unit:" }), "\u00A0", state.PropertyAddress.Suite] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "City:" }), "\u00A0", state.PropertyAddress.City] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "State:" }), "\u00A0", state.PropertyAddress.State] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Zip:" }), "\u00A0", state.PropertyAddress.Zip] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "County:" }), "\u00A0", state.PropertyAddress.County] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Parcel number:" }), "\u00A0", state.PropertyAddress.Parcel ? state.PropertyAddress.Parcel : "------"] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Loan amount:" }), "\u00A0", state.PropertyAddress.LoanAmount ? state.PropertyAddress.LoanAmount : "------"] })] })] }), _jsxs(Row, { className: "px-5 py-3", children: [_jsx("h4", { children: "Borrowers" }), state.Borrowers.map((borrower, idx) => (_jsxs(Row, { className: "mt-2 position-relative", children: [_jsxs(SerialNumber, { children: [idx + 1, "."] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "First name:" }), "\u00A0", borrower.FirstName] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Middle name:" }), "\u00A0", borrower.MiddleName ? borrower.MiddleName : "------"] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Last name:" }), "\u00A0", borrower.LastName] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Borrower type:" }), "\u00A0", borrower.IndCorp] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Email:" }), "\u00A0", borrower.Email ? borrower.Email : "------"] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Phone:" }), "\u00A0", borrower.Phone ? borrower.Phone : "------"] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Social security number:" }), "\u00A0", borrower.Last4SSN] })] })))] }), _jsxs(Row, { className: "px-5 py-3", children: [_jsx("h4", { children: "Products" }), _jsxs(Row, { className: "mt-2", children: [_jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "AVM product:" }), "\u00A0", state.Products.AvmProduct] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Title product:" }), "\u00A0", state.Products.TitleProduct] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Appraisal product:" }), "\u00A0", state.Products.AppraisalProduct] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "PCR property inspection condition report:" }), "\u00A0", state.Products.PCRProduct] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Flood:" }), "\u00A0", state.Products.FloodProduct] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "BPO:" }), "\u00A0", state.Products.BPOProduct] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Evaluation:" }), "\u00A0", state.Products.EvaluationProduct] })] })] }), _jsxs(Row, { className: "px-5 py-3", children: [_jsx("h4", { children: "Upload Documents" }), state.Documents.map((document, idx) => (_jsxs(Row, { className: "mt-2 position-relative", children: [_jsxs(SerialNumber, { children: [idx + 1, "."] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Document type:" }), "\u00A0", document.DocumentType] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Associated product:" }), "\u00A0", document.Product] }), _jsxs(Col, { lg: 6, xl: 4, children: [_jsx("b", { children: "Document Id:" }), "\u00A0", document.DocumentId] })] })))] }), _jsxs(Row, { className: "border-0 mt-2 px-5 py-3 mt-3 mb-5 d-flex justify-content-between", children: [_jsx(CancelButton, { onClick: () => {
                                // history("/orders/edit/" + state.id);
                            }, children: "Edit" }), _jsx(SaveButton, { className: "float-end", onClick: () => history("/orders"), children: "Confirm" })] })] }) }));
};
export default Confirmation;
